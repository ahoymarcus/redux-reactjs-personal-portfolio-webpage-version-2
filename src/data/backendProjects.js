export let backendProjects = [
	{
		title: 'Rocket Launches API',
		urlRepository: 'https://github.com/ahoymarcus/expressjs-rocket-launches-api',
		urlApp: '',
		image: '/images/backend/nodejs-rocket-launches-api.png',
		description: 'A API consome dados de uma API externa, a API da SpaceX REST API para criar um pequeno serviço de dados, na forma de uma api rest local com só 04 rotas.',
		tags: ['node-js', 'jwt'],
	},
	{
		title: 'Jobs Search API',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-jobs-api',
		urlApp: 'Uma API completa com dados de empregabilidade e que usa de autenticação jwt.',
		image: '/images/backend/job-api-big-icon.png',
		description: 'API completa que utiliza autenticaçãoJWT nas rotas restritas, além de usar Bcryptjs como forma de hashear dados de senhas armazenados no banco de dados.',
		tags: ['node-js', 'jwt', 'bcryptjs'],
	},
	{
		title: 'Tasks Manager App',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-task-manager-app',
		urlApp: '',
		image: '/images/backend/img-final-do-projeto-tasks-manager-app.png',
		description: 'Projeto que trabalha com uma aplicação totalmente modular, separando um modulo para rotas, outro para controladores, também para o modelo de dados e para a conexão com o banco de dados typescript.',
		tags: ['express-js'],
	},
	{
		title: 'Products Store API',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-store-api',
		urlApp: '',
		image: '/images/backend/store-api-icon-big.png',
		description: 'A API permite consultas de maneira dinâmica através da passagem de parâmetros ou operadores de comparação, por exemplo, a partir dos seus campos, como nome, preço ou companhia, etc...',
		tags: ['express-js', 'dotenv', 'mongodb'],
	},
	{
		title: 'jwt Exercise Studyapp',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-jwt-basics-studyapp',
		urlApp: '',
		image: '/images/backend/jwt-basics-studyapp-freecodecamp.org.png',
		description: 'Uma aplicação de estudo para treinar o padrão de autenticação JSON Web Token (jwt), uma importante parte dentro do desenvolvimento de aplicações web quanto ao quesito de segurança.',
		tags: ['node-js', 'jwt', 'express-async-errors', 'dotenv', 'mongodb'],
	},
	{
		title: 'API with typescript',
		urlRepository: 'https://github.com/ahoymarcus/rest-expressjs-typescript-dio',
		urlApp: '',
		image: '/images/backend/rest-expressjs-typescript-dio.png',
		description: 'O app coloca em prática os conceitos trazidos no curso - Explorando o Estilo Arquitetural REST com Node.js',
		tags: ['express-js', 'typescript'],
	},
	{
		title: 'API Serverless',
		urlRepository: 'https://github.com/ahoymarcus/digital-innovation-one-serverless-api',
		urlApp: '',
		image: '/images/backend/rota-de-entrada-azure-cloud-icon.png',
		description: 'Construindo uma API para Gestão de Produtos utilizando Node.js, aplicando conceitos de Arquitetura Serverless com Node.js.',
		tags: ['node-js', 'typescript', 'azure function core tools'],
	},
	{
		title: 'Chatbot App - node-js',
		urlRepository: 'https://github.com/ahoymarcus/chatbot-nodejs',
		urlApp: '',
		image: '/images/backend/chatbot-nodejs-icon.png',
		description: 'O projeto vai desenvolver um chatbot aplicando conceitos de integração entre o Noje-JS, o Telegram e serviços da Google (Dialogflow e Youtube).',
		tags: ['node-js', 'node-telegram-bot-api', 'dialogflow', 'youtube-node'],
	},
	{
		title: 'Encurtador de URL',
		urlRepository: 'https://github.com/ahoymarcus/url-shortener-nodejs-typescript-dio',
		urlApp: 'https://github.com/ahoymarcus/url-shortener-nodejs-typescript-dio',
		image: '/images/backend/encurtador-de-url-nodejs-typescript-mongodb.png',
		description: 'O projeto serve como prática para o desenvolvimento de uma aplicação para encurtar URL. Trata-se de uma API construída com o node-js, o typescript e o banco de dados typescript.',
		tags: ['node-js', 'typescript', 'mongodb'],
	},
	{
		title: 'API with typescript',
		urlRepository: 'https://github.com/ahoymarcus/express-typescript-sql-dio',
		urlApp: '',
		image: '/images/backend/API-REST-com-Node-e-express-js.png',
		description: 'O projeto serve como prática para lidar com bancos de dados relacionais a partir do node-js. Cria uma pequena API no Estilo Arquitetural REST com Node.js',
		tags: ['express-js', 'typescript', 'api rest', 'postgres'],
	},
	{
		title: 'Timestamp Microservice',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-timestamp-app-freecodecamp',
		urlApp: '',
		image: '/images/backend/timestamp-microservice-rodando-no-Replit.png',
		description: 'Prieiro desafio da série para a certificação Back End Development and APIs, com o objetivo de produzir uma aplicação backend que recebe requisições com parâmetros de datas para serem parseados.',
		tags: ['node-js'],
	},
	{
		title: 'URL Shortener - node-js',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-url-shortener-freecodecamp',
		urlApp: '',
		image: '/images/backend/url-shortener-microservice-rodando-no-Replit.png',
		description: 'Terceiro desafio para a certificação Back End Development. De um lado recebe um payload URL e devolve uma referência mais curta. Do outro lado, redireciona para a URL quando recebe um GET com  a URL encurtada.',
		tags: ['express-js'],
	},
	{
		title: 'File Metadata Uploader',
		urlRepository: 'https://github.com/ahoymarcus/filemetadata-microservice-freecodecamp',
		urlApp: '',
		image: '/images/backend/file-metadata-microservice-home-page.png',
		description: 'Quinto desafio da certificação Back End Development, com o objetivo de produzir uma aplicação que recebe arquivos de upload e responde a requisição devolvendo informações de metadados sobre o arquivo do upload.',
		tags: ['express-js'],
	},
	{
		title: 'JavaScript Assertions',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-automated-testing-app',
		urlApp: '',
		image: '/images/backend/javaScript-assertions-study-freecodecamp.png',
		description: 'Estudo de testes com o Node JS utilizando suas asserções e também módulos de terceiros. É o primeiro estudo dentro da Certificação em Quality Assurance da Freecodecamp.org em desenvolvimento backend com Node e express-js avançado.',
		tags: ['express-js', 'node-js assertions', 'chai'],
	},
	{
		title: 'Authentication and Socket.io',
		urlRepository: 'https://github.com/ahoymarcus/advanced-nodejs-freecodecamp-studyapp',
		urlApp: '',
		image: '/images/backend/nodejs-authentication-studyapp.png',
		description: 'Estudo de algumas funções avançadas de node-js como parte da Certificação em Quality Assurance da Freecodecamp.org em desenvolvimento backend com Node e express-js avançado.',
		tags: ['express-js', 'chai', 'mocha'],
	},
	{
		title: 'Exercise Tracker',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-exercise-tracker-freecodecamp',
		urlApp: '',
		image: '/images/backend/exercice-tracker-microservice-home-page-comp-page.png',
		description: 'Quarto desafio da certificação Back End Development, com o objetivo de produzir uma aplicação que cadastra um usuário e pelo id-hash criado permite postar exercícios na aplicação.',
		tags: ['node-js', 'typescript'],
	},
	{
		title: 'Local Library - express-js',
		urlRepository: 'https://github.com/ahoymarcus/express-locallibrary-app',
		urlApp: '',
		image: '/images/backend/local-library-icon.png',
		description: 'Projeto de desenvolvimento backend to create a small library web page using node-js and express-js.',
		tags: ['express-js', 'pug view', 'typescript', 'mongodb', 'luxon (date formatter)'],
	},
	{
		title: 'Music Database - express-js',
		urlRepository: 'https://github.com/ahoymarcus/musica-erudita-api-node',
		urlApp: '',
		image: '/images/backend/music-db-icon.png',
		description: 'Uma Aplicação Web com Node e Express, apresentando conteúdos variados sobre música e mais especificamente música erudita, e usando uma stack de tecnologia JavaScript.',
		tags: ['express-js', 'jest', 'mysql', 'typescript'],
	},
	{
		title: 'Data Base with NodeJS',
		urlRepository: 'https://github.com/ahoymarcus/meadowlarkapp-javascript-stack.git',
		urlApp: '',
		image: '/images/backend/database-node-icon.png',
		description: 'Aplicação Web com Node e Express do livro "Programação web com Node e Express: beneficiando-se da stack JavaScript", do professor Ethan Brown.',
		tags: ['handlebars', 'jest', 'morgan', 'mongodb'],
	},
	{
		title: 'Request Header Parser',
		urlRepository: 'https://github.com/ahoymarcus/nodejs-request-header-parser-freecodecamp',
		urlApp: '',
		image: '/images/backend/header-parser-microservice-rodando-no-Replit.png',
		description: 'Segundo desafio da série para a certificação Back End Development, com  uma aplicação que faz o parse da requisição e retornar informações da aplicação cliente.',
		tags: ['express-js'],
	},
];







